1. Initialization
2. Group functions1
	double ComputeTerm1_(Vector &betas);
	double ComputeTerm2_(Vector &betas, double p, double q);
	double ComputeTerm3_();
	
3. Group functions
	ComputePostpondprob_
	ComputeSumDerivativeConditionalPostpondProb_
	void ComputeSumDerivativeBetaFunction_(Vector &betas, double p, double q);
	void Objective::ComputeDeumeratorBetaFunction_
	
4. Group functions
	ComputeDerivativeBetaTerm1_()
	ComputeDerivativeBetaTerm2_()
	ComputeDerivativeBetaTerm3_()
	
5. Group functions
	Matrix ComputeSecondDerivativeBetaTerm1_();
	Matrix ComputeSecondDerivativeBetaTerm2_();
	Matrix ComputeSecondDerivativeBetaTerm3_();

6. Group functions
	double ComputeDerivativePTerm1_();
	double ComputeDerivativePTerm2_();
	double ComputeDerivativePTerm3_();

	double ComputeSecondDerivativePTerm1_();
	double ComputeSecondDerivativePTerm2_();
	double ComputeSecondDerivativePTerm3_();

	double ComputeDerivativeQTerm1_();
	double ComputeDerivativeQTerm2_();
	double ComputeDerivativeQTerm3_();

	double ComputeSecondDerivativeQTerm1_();
	double ComputeSecondDerivativeQTerm2_();
	double ComputeSecondDerivativeQTerm3_();
	
7. Devide functions into two group
	Objective&Gradient
	Objective&Gradient&Hessian

8. Check

9. Handle data structure for several classes

10. Check2 -- important!